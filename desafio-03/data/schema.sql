DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS amizade CASCADE;
DROP TABLE IF EXISTS postagem CASCADE;
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;
DROP TABLE IF EXISTS permissao CASCADE;

CREATE TABLE usuario (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    nome VARCHAR(255) 			  NOT NULL,
    email VARCHAR(255) 			  NOT NULL,
    apelido VARCHAR(50),
    senha VARCHAR(128) 		      NOT NULL,
    url_imagem VARCHAR(512),
    data_nascimento DATE NOT NULL,
	is_ativo BOOLEAN NOT NULL DEFAULT FALSE,

	CONSTRAINT pk_usuario_id PRIMARY KEY(id),
	CONSTRAINT uk_email_usuario UNIQUE(email)
);

CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	funcao VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL,
	CONSTRAINT pk_permissao PRIMARY KEY (id),
	CONSTRAINT uk_permissao UNIQUE (funcao, usuario_id),
	CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario
);

CREATE TABLE amizade (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    usuario_id BIGINT NOT NULL,
    amigo_id BIGINT NOT NULL,
    data_amizade TIMESTAMP NOT NULL,
	status VARCHAR(20) NOT NULL DEFAULT 'PENDENTE',

	CONSTRAINT pk_amizade_id PRIMARY KEY(id),
	CONSTRAINT uk_amizade UNIQUE(usuario_id, amigo_id),
	CONSTRAINT fk_usuario_id FOREIGN KEY(usuario_id) REFERENCES usuario(id),
	CONSTRAINT fk_amigo_id FOREIGN KEY(usuario_id) REFERENCES usuario(id),
	CONSTRAINT status_check CHECK (status IN ('PENDENTE', 'ACEITO'))
);


CREATE TABLE postagem (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    usuario_id BIGINT NOT NULL,
    conteudo VARCHAR(500) NOT NULL,
	url_imagem VARCHAR(512),
    data_postagem TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	is_privado BOOLEAN NOT NULL DEFAULT FALSE,

	CONSTRAINT pk_postagem_id PRIMARY KEY(id),
	CONSTRAINT fk_usuario_id FOREIGN KEY(usuario_id) REFERENCES usuario(id)
);


CREATE TABLE curtida (
    id BIGINT GENERATED ALWAYS AS IDENTITY,
    usuario_id BIGINT NOT NULL,
    postagem_id BIGINT NOT NULL,
    horario_curtida TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

	CONSTRAINT pk_curtida_id PRIMARY KEY(id),
	CONSTRAINT fk_usuario_id FOREIGN KEY(usuario_id)  REFERENCES usuario(id),
	CONSTRAINT fk_postagem_id FOREIGN KEY(postagem_id) REFERENCES postagem(id),
	CONSTRAINT uk_usuario_curtida_postagem UNIQUE(usuario_id, postagem_id)
);


CREATE TABLE comentario (
  id BIGINT GENERATED ALWAYS AS IDENTITY,
  usuario_id BIGINT NOT NULL,
  postagem_id BIGINT NOT NULL,
  conteudo VARCHAR(500) NOT NULL,
  data_criacao TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,

  CONSTRAINT pk_comentario_id PRIMARY KEY(id),
  CONSTRAINT pk_postagem_id FOREIGN KEY(postagem_id) REFERENCES postagem(id),
  CONSTRAINT fk_usuario_id FOREIGN KEY(usuario_id) REFERENCES usuario(id)
);

